<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="alertSureToDeleteOperation" xml:space="preserve">
    <value>Are you sure, that you want to delete the operation?</value>
  </data>
  <data name="alertSureToRemoveLoot" xml:space="preserve">
    <value>Are you sure, that you want to remove the loot?</value>
  </data>
  <data name="alertSureToRemoveMember" xml:space="preserve">
    <value>Are you sure, that you want to remove the member?</value>
  </data>
  <data name="btnAddLoot" xml:space="preserve">
    <value>Add loot</value>
  </data>
  <data name="btnAddMember" xml:space="preserve">
    <value>Add member</value>
  </data>
  <data name="btnAddOperation" xml:space="preserve">
    <value>Add operation</value>
  </data>
  <data name="infoOperationBasedOn" xml:space="preserve">
    <value>Based on:</value>
  </data>
  <data name="infoOperationDateLastModified" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="infoOperationID" xml:space="preserve">
    <value>Operation ID:</value>
  </data>
  <data name="infoOperationInfo" xml:space="preserve">
    <value>Op. info:</value>
  </data>
  <data name="infoOperationLastModifiedBy" xml:space="preserve">
    <value>Last change by :</value>
  </data>
  <data name="infoOperationLength" xml:space="preserve">
    <value>Length:</value>
  </data>
  <data name="infoOperationLootInfo" xml:space="preserve">
    <value>Loot: name - quantity - price each - total price</value>
  </data>
  <data name="infoOperationParticipantsInfo" xml:space="preserve">
    <value>Participants: name - length - isk - info</value>
  </data>
  <data name="infoOperationSystem" xml:space="preserve">
    <value>System:</value>
  </data>
  <data name="infoOperationTax" xml:space="preserve">
    <value>Tax:</value>
  </data>
  <data name="infoOperationTaxInfo" xml:space="preserve">
    <value>Tax info:</value>
  </data>
  <data name="infoOperationTotalIsk" xml:space="preserve">
    <value>Total isk:</value>
  </data>
  <data name="infoOperationType" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="noAddedOperations" xml:space="preserve">
    <value>No added operations.</value>
  </data>
  <data name="staticAddLootPriceEach" xml:space="preserve">
    <value>Price each:</value>
  </data>
  <data name="staticAddLootQuantity" xml:space="preserve">
    <value>Quantity:</value>
  </data>
  <data name="staticAddLootToOperation" xml:space="preserve">
    <value>Add loot to operation ID:</value>
  </data>
  <data name="staticAddMemberToOperation" xml:space="preserve">
    <value>Add member to operation ID:</value>
  </data>
  <data name="staticAddOperation" xml:space="preserve">
    <value>Add operation</value>
  </data>
  <data name="staticAddUserInfo" xml:space="preserve">
    <value>Info:</value>
  </data>
  <data name="staticAddUserLength" xml:space="preserve">
    <value>Length:</value>
  </data>
  <data name="staticEditLootPriceEach" xml:space="preserve">
    <value>Price each:</value>
  </data>
  <data name="staticEditLootQuantity" xml:space="preserve">
    <value>Quantity:</value>
  </data>
  <data name="staticEditMember" xml:space="preserve">
    <value>Edit member participated in operation ID:</value>
  </data>
  <data name="staticEditMemberInfo" xml:space="preserve">
    <value>Info:</value>
  </data>
  <data name="staticEditMemberLength" xml:space="preserve">
    <value>Length:</value>
  </data>
  <data name="staticEditOperation" xml:space="preserve">
    <value>Edit main information for operation ID:</value>
  </data>
  <data name="staticEditOperationInfo" xml:space="preserve">
    <value>Info:</value>
  </data>
  <data name="staticEditOperationLength" xml:space="preserve">
    <value>Length:</value>
  </data>
  <data name="staticEditOperationLoot" xml:space="preserve">
    <value>Edit loot dropped during operation ID:</value>
  </data>
  <data name="staticEditOperationSystem" xml:space="preserve">
    <value>System:</value>
  </data>
  <data name="staticEditOperationTax" xml:space="preserve">
    <value>Tax:</value>
  </data>
  <data name="staticEditOperationTaxInfo" xml:space="preserve">
    <value>Tax info:</value>
  </data>
  <data name="staticOperationBasedOn" xml:space="preserve">
    <value>based on:</value>
  </data>
  <data name="staticOperationBasedOnPlexes" xml:space="preserve">
    <value>plexes</value>
  </data>
  <data name="staticOperationBasedOnTime" xml:space="preserve">
    <value>time</value>
  </data>
  <data name="staticOperationInfoWatermark" xml:space="preserve">
    <value>Info for the operation.</value>
  </data>
  <data name="staticOperationLength" xml:space="preserve">
    <value>length:</value>
  </data>
  <data name="staticOperationLootInfo" xml:space="preserve">
    <value>Loot: name - quantity - price each</value>
  </data>
  <data name="staticOperationSystem" xml:space="preserve">
    <value>system:</value>
  </data>
  <data name="staticOperationTax" xml:space="preserve">
    <value>Tax:</value>
  </data>
  <data name="staticOperationTaxInfoWatermark" xml:space="preserve">
    <value>Info for the tax.</value>
  </data>
  <data name="staticOperationTaxTypeIsk" xml:space="preserve">
    <value>isk</value>
  </data>
  <data name="staticOperationType" xml:space="preserve">
    <value>Operation type:</value>
  </data>
  <data name="staticOperationTypeCombat" xml:space="preserve">
    <value>combat</value>
  </data>
  <data name="staticOperationTypeGas" xml:space="preserve">
    <value>gas harvesting</value>
  </data>
  <data name="staticParticipantsInfo" xml:space="preserve">
    <value>Participants: name - time - info</value>
  </data>
  <data name="staticSiteErrors" xml:space="preserve">
    <value>* Operations / participants / loot cannot be deleted from the game.</value>
  </data>
  <data name="statusLootRemoved" xml:space="preserve">
    <value>The chosen loot is removed from operation.</value>
  </data>
  <data name="statusMemberRemoved" xml:space="preserve">
    <value>Member removed from operation.</value>
  </data>
  <data name="statusOperationAdded" xml:space="preserve">
    <value>Operation added!</value>
  </data>
  <data name="statusOperationDeleted" xml:space="preserve">
    <value>Operation deleted!</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="tooltipAddLootToOp" xml:space="preserve">
    <value>For adding loot to operation.</value>
  </data>
  <data name="tooltipAddMemberToOp" xml:space="preserve">
    <value>For adding member to op.</value>
  </data>
  <data name="tooltipDeleteOperation" xml:space="preserve">
    <value>Deletes the operation.</value>
  </data>
  <data name="tooltipEditMember" xml:space="preserve">
    <value>For editing member.</value>
  </data>
  <data name="tooltipEditOperation" xml:space="preserve">
    <value>Edit operation main info.</value>
  </data>
  <data name="tooltipEditOpLoot" xml:space="preserve">
    <value>For editing loot.</value>
  </data>
  <data name="tooltipRemoveMember" xml:space="preserve">
    <value>Removes member from the operation.</value>
  </data>
  <data name="tooltipRemoveOpLoot" xml:space="preserve">
    <value>Removes loot from op.</value>
  </data>
  <data name="errOperationChooseOtherLoot" xml:space="preserve">
    <value>Choose loot, which isn't registered in the operation!</value>
  </data>
  <data name="errOperationChooseOtherMember" xml:space="preserve">
    <value>Choose member, which is not participating in the operation!</value>
  </data>
  <data name="errOperationErrors" xml:space="preserve">
    <value>Errors:</value>
  </data>
  <data name="errOperationLengthCantBeEmpty" xml:space="preserve">
    <value>Operation length cannot be empty.</value>
  </data>
  <data name="errOperationLengthFormat" xml:space="preserve">
    <value>Incorrect operation length format.</value>
  </data>
  <data name="errOperationLengthLess" xml:space="preserve">
    <value>Operation length cannot be less than 1!</value>
  </data>
  <data name="errOperationLengthNew" xml:space="preserve">
    <value>New operation length is less than some of the members!</value>
  </data>
  <data name="errOperationLengthType" xml:space="preserve">
    <value>Specify operation length.</value>
  </data>
  <data name="errOperationLootChoose" xml:space="preserve">
    <value>Choose loot!</value>
  </data>
  <data name="errOperationLootDuplicate" xml:space="preserve">
    <value>There are duplicating loot rows in the operation.</value>
  </data>
  <data name="errOperationLootEnter" xml:space="preserve">
    <value>Enter loot, dropped during the operation.</value>
  </data>
  <data name="errOperationLootPriceEnter" xml:space="preserve">
    <value>Enter loot price.</value>
  </data>
  <data name="errOperationLootPriceFormat" xml:space="preserve">
    <value>Incorrect loot price format.</value>
  </data>
  <data name="errOperationLootPriceLess" xml:space="preserve">
    <value>Loot price cannot be less than 0.</value>
  </data>
  <data name="errOperationLootQuantityFormat" xml:space="preserve">
    <value>Incorrect loot quantity format.</value>
  </data>
  <data name="errOperationLootQuantityLess" xml:space="preserve">
    <value>Loot quantity cannot be less than 1.</value>
  </data>
  <data name="errOperationLootQuantityType" xml:space="preserve">
    <value>Type loot quantity.</value>
  </data>
  <data name="errOperationMemberChoose" xml:space="preserve">
    <value>Choose member!</value>
  </data>
  <data name="errOperationMemberDuplicate" xml:space="preserve">
    <value>There are duplicating member rows in the operation.</value>
  </data>
  <data name="errOperationMemberEnter" xml:space="preserve">
    <value>Enter members, participating in the opertaion.</value>
  </data>
  <data name="errOperationMemberLengthFormat" xml:space="preserve">
    <value>Incorrect member length format.</value>
  </data>
  <data name="errOperationMemberLengthLess" xml:space="preserve">
    <value>Member length cannot be less than 0.</value>
  </data>
  <data name="errOperationMemberLengthMore" xml:space="preserve">
    <value>Member length cannot be more than operation length.</value>
  </data>
  <data name="errOperationMemberLengthType" xml:space="preserve">
    <value>Type member length.</value>
  </data>
  <data name="errOperationSystemLengthMore" xml:space="preserve">
    <value>System name length cannot be more than 100.</value>
  </data>
  <data name="errOperationTaxFormat" xml:space="preserve">
    <value>Incorrect operation tax format.</value>
  </data>
  <data name="errOperationTaxLess" xml:space="preserve">
    <value>Tax cannot be less than 1.</value>
  </data>
  <data name="errOperationTaxLessZero" xml:space="preserve">
    <value>Tax cannot be less than 0!</value>
  </data>
  <data name="errOperationTaxMoreIsk" xml:space="preserve">
    <value>Tax cannot be more than loot total price.</value>
  </data>
  <data name="errOperationTaxMorePerc" xml:space="preserve">
    <value>Tax cannot be more than 100%.</value>
  </data>
  <data name="infoOperationAddedBy" xml:space="preserve">
    <value>Added by:</value>
  </data>
  <data name="infoOperationDateAdded" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="statusOperationInfoUpdated" xml:space="preserve">
    <value>Operation info updated!</value>
  </data>
  <data name="statusOperationLengthUpdated" xml:space="preserve">
    <value>Operation length updated!</value>
  </data>
  <data name="statusOperationLootAdded" xml:space="preserve">
    <value>Loot added to operation!</value>
  </data>
  <data name="statusOperationLootUpdated" xml:space="preserve">
    <value>Operation loot information updated!</value>
  </data>
  <data name="statusOperationMemberAdded" xml:space="preserve">
    <value>Member is added to operation!</value>
  </data>
  <data name="statusOperationMemberUpdated" xml:space="preserve">
    <value>Operation member information updated!</value>
  </data>
  <data name="statusOperationSystemUpdated" xml:space="preserve">
    <value>Operation system changed!</value>
  </data>
  <data name="statusOperationTaxInfoUpdated" xml:space="preserve">
    <value>Operation tax info updated!</value>
  </data>
  <data name="statusOperationTaxUpdated" xml:space="preserve">
    <value>Operation tax changed!</value>
  </data>
  <data name="staticCbFillLootLastPriceOnSelect" xml:space="preserve">
    <value>Fill loot last op price</value>
  </data>
  <data name="staticAllLootTypes" xml:space="preserve">
    <value>show all loot types</value>
  </data>
</root>