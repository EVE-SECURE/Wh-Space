//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Logs_User", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.User), "Logs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Log), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Signatures_User", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.User), "Signatures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Signature), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Signatures_Wormwhole1", "Systems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Systems), "Signature", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Signature), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Wormwhole_FromSystem", "Systems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Systems), "Wormwhole1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Wormwhole), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Wormwhole_ToSystem", "Systems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Systems), "Wormwhole1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Wormwhole), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Wormwholes_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.User), "Systems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Systems), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_OperationLoot_Loot", "Loot", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Loot), "Operation_Loot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.OperationLoot), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_OperationLoot_Operation", "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Operation), "Operation_Loot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.OperationLoot), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_OperationUser_Operation", "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Operation), "Operation_User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.OperationUser), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_OperationUser_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.User), "Operation_User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.OperationUser), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Operation_AddedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.User), "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Operation), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Operation_LastModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhSpace.User), "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Operation), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Corporations_AddedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.User), "Corporations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Corporation), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Logs_Corporation", "Corporations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Corporation), "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Log), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Operation_Corporation", "Corporations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Corporation), "Operation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Operation), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_System_Corporation", "Corporations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Corporation), "Systems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Systems), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Users_Corporation", "Corporations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhSpace.Corporation), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.User), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_FeedBack_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.User), "FeedBack", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.FeedBack), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_Texts_LastModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhSpace.User), "Texts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.Text), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_StaticCorporationsSystemsData_Corporation", "Corporation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.Corporation), "StaticCorporationsSystemsData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.StaticCorporationSystem), true)]
[assembly: EdmRelationshipAttribute("WormwholesModel", "FK_StaticCorporationsSystemsData_System", "StaticSystemData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhSpace.StaticSystemData), "StaticCorporationsSystemsData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhSpace.StaticCorporationSystem), true)]

#endregion

namespace WhSpace
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> LogSet
        {
            get
            {
                if ((_LogSet == null))
                {
                    _LogSet = base.CreateObjectSet<Log>("LogSet");
                }
                return _LogSet;
            }
        }
        private ObjectSet<Log> _LogSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Signature> SignatureSet
        {
            get
            {
                if ((_SignatureSet == null))
                {
                    _SignatureSet = base.CreateObjectSet<Signature>("SignatureSet");
                }
                return _SignatureSet;
            }
        }
        private ObjectSet<Signature> _SignatureSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> UserSet
        {
            get
            {
                if ((_UserSet == null))
                {
                    _UserSet = base.CreateObjectSet<User>("UserSet");
                }
                return _UserSet;
            }
        }
        private ObjectSet<User> _UserSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Systems> SystemsSet
        {
            get
            {
                if ((_SystemsSet == null))
                {
                    _SystemsSet = base.CreateObjectSet<Systems>("SystemsSet");
                }
                return _SystemsSet;
            }
        }
        private ObjectSet<Systems> _SystemsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wormwhole> WormwholeSet
        {
            get
            {
                if ((_WormwholeSet == null))
                {
                    _WormwholeSet = base.CreateObjectSet<Wormwhole>("WormwholeSet");
                }
                return _WormwholeSet;
            }
        }
        private ObjectSet<Wormwhole> _WormwholeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WormwholeIdentification> WormwholeIdentification
        {
            get
            {
                if ((_WormwholeIdentification == null))
                {
                    _WormwholeIdentification = base.CreateObjectSet<WormwholeIdentification>("WormwholeIdentification");
                }
                return _WormwholeIdentification;
            }
        }
        private ObjectSet<WormwholeIdentification> _WormwholeIdentification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Loot> LootSet
        {
            get
            {
                if ((_LootSet == null))
                {
                    _LootSet = base.CreateObjectSet<Loot>("LootSet");
                }
                return _LootSet;
            }
        }
        private ObjectSet<Loot> _LootSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OperationLoot> OperationLootSet
        {
            get
            {
                if ((_OperationLootSet == null))
                {
                    _OperationLootSet = base.CreateObjectSet<OperationLoot>("OperationLootSet");
                }
                return _OperationLootSet;
            }
        }
        private ObjectSet<OperationLoot> _OperationLootSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OperationUser> OperationUserSet
        {
            get
            {
                if ((_OperationUserSet == null))
                {
                    _OperationUserSet = base.CreateObjectSet<OperationUser>("OperationUserSet");
                }
                return _OperationUserSet;
            }
        }
        private ObjectSet<OperationUser> _OperationUserSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Operation> OperationSet
        {
            get
            {
                if ((_OperationSet == null))
                {
                    _OperationSet = base.CreateObjectSet<Operation>("OperationSet");
                }
                return _OperationSet;
            }
        }
        private ObjectSet<Operation> _OperationSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Corporation> CorporationSet
        {
            get
            {
                if ((_CorporationSet == null))
                {
                    _CorporationSet = base.CreateObjectSet<Corporation>("CorporationSet");
                }
                return _CorporationSet;
            }
        }
        private ObjectSet<Corporation> _CorporationSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedBack> FeedBackSet
        {
            get
            {
                if ((_FeedBackSet == null))
                {
                    _FeedBackSet = base.CreateObjectSet<FeedBack>("FeedBackSet");
                }
                return _FeedBackSet;
            }
        }
        private ObjectSet<FeedBack> _FeedBackSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Text> TextSet
        {
            get
            {
                if ((_TextSet == null))
                {
                    _TextSet = base.CreateObjectSet<Text>("TextSet");
                }
                return _TextSet;
            }
        }
        private ObjectSet<Text> _TextSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Statistic> StatisticSet
        {
            get
            {
                if ((_StatisticSet == null))
                {
                    _StatisticSet = base.CreateObjectSet<Statistic>("StatisticSet");
                }
                return _StatisticSet;
            }
        }
        private ObjectSet<Statistic> _StatisticSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StaticCorporationSystem> StaticCorporationSystemSet
        {
            get
            {
                if ((_StaticCorporationSystemSet == null))
                {
                    _StaticCorporationSystemSet = base.CreateObjectSet<StaticCorporationSystem>("StaticCorporationSystemSet");
                }
                return _StaticCorporationSystemSet;
            }
        }
        private ObjectSet<StaticCorporationSystem> _StaticCorporationSystemSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StaticSystemData> StaticSystemDataSet
        {
            get
            {
                if ((_StaticSystemDataSet == null))
                {
                    _StaticSystemDataSet = base.CreateObjectSet<StaticSystemData>("StaticSystemDataSet");
                }
                return _StaticSystemDataSet;
            }
        }
        private ObjectSet<StaticSystemData> _StaticSystemDataSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<pConfiguration> pConfigurationSet
        {
            get
            {
                if ((_pConfigurationSet == null))
                {
                    _pConfigurationSet = base.CreateObjectSet<pConfiguration>("pConfigurationSet");
                }
                return _pConfigurationSet;
            }
        }
        private ObjectSet<pConfiguration> _pConfigurationSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogSet(Log log)
        {
            base.AddObject("LogSet", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SignatureSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSignatureSet(Signature signature)
        {
            base.AddObject("SignatureSet", signature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSet(User user)
        {
            base.AddObject("UserSet", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemsSet(Systems systems)
        {
            base.AddObject("SystemsSet", systems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WormwholeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWormwholeSet(Wormwhole wormwhole)
        {
            base.AddObject("WormwholeSet", wormwhole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WormwholeIdentification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWormwholeIdentification(WormwholeIdentification wormwholeIdentification)
        {
            base.AddObject("WormwholeIdentification", wormwholeIdentification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LootSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLootSet(Loot loot)
        {
            base.AddObject("LootSet", loot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OperationLootSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperationLootSet(OperationLoot operationLoot)
        {
            base.AddObject("OperationLootSet", operationLoot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OperationUserSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperationUserSet(OperationUser operationUser)
        {
            base.AddObject("OperationUserSet", operationUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OperationSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperationSet(Operation operation)
        {
            base.AddObject("OperationSet", operation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CorporationSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCorporationSet(Corporation corporation)
        {
            base.AddObject("CorporationSet", corporation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedBackSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedBackSet(FeedBack feedBack)
        {
            base.AddObject("FeedBackSet", feedBack);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TextSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTextSet(Text text)
        {
            base.AddObject("TextSet", text);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatisticSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatisticSet(Statistic statistic)
        {
            base.AddObject("StatisticSet", statistic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StaticCorporationSystemSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaticCorporationSystemSet(StaticCorporationSystem staticCorporationSystem)
        {
            base.AddObject("StaticCorporationSystemSet", staticCorporationSystem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StaticSystemDataSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaticSystemDataSet(StaticSystemData staticSystemData)
        {
            base.AddObject("StaticSystemDataSet", staticSystemData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the pConfigurationSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopConfigurationSet(pConfiguration pConfiguration)
        {
            base.AddObject("pConfigurationSet", pConfiguration);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Corporation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Corporation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Corporation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="logsLanguage">Initial value of the logsLanguage property.</param>
        /// <param name="dateAdded">Initial value of the dateAdded property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        public static Corporation CreateCorporation(global::System.Int64 id, global::System.String name, global::System.String logsLanguage, global::System.DateTime dateAdded, global::System.Int64 addedBy)
        {
            Corporation corporation = new Corporation();
            corporation.ID = id;
            corporation.name = name;
            corporation.logsLanguage = logsLanguage;
            corporation.dateAdded = dateAdded;
            corporation.AddedBy = addedBy;
            return corporation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String logsLanguage
        {
            get
            {
                return _logsLanguage;
            }
            set
            {
                OnlogsLanguageChanging(value);
                ReportPropertyChanging("logsLanguage");
                _logsLanguage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("logsLanguage");
                OnlogsLanguageChanged();
            }
        }
        private global::System.String _logsLanguage;
        partial void OnlogsLanguageChanging(global::System.String value);
        partial void OnlogsLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAdded
        {
            get
            {
                return _dateAdded;
            }
            set
            {
                OndateAddedChanging(value);
                ReportPropertyChanging("dateAdded");
                _dateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAdded");
                OndateAddedChanged();
            }
        }
        private global::System.DateTime _dateAdded;
        partial void OndateAddedChanging(global::System.DateTime value);
        partial void OndateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.Int64 _AddedBy;
        partial void OnAddedByChanging(global::System.Int64 value);
        partial void OnAddedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Corporations_AddedBy", "User")]
        public User RAddedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Corporations_AddedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Corporations_AddedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> RAddedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Corporations_AddedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_Corporations_AddedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Logs_Corporation", "Log")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("WormwholesModel.FK_Logs_Corporation", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("WormwholesModel.FK_Logs_Corporation", "Log", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Operation_Corporation", "Operation")]
        public EntityCollection<Operation> Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Operation>("WormwholesModel.FK_Operation_Corporation", "Operation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Operation>("WormwholesModel.FK_Operation_Corporation", "Operation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_System_Corporation", "Systems")]
        public EntityCollection<Systems> Systems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Systems>("WormwholesModel.FK_System_Corporation", "Systems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Systems>("WormwholesModel.FK_System_Corporation", "Systems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Users_Corporation", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("WormwholesModel.FK_Users_Corporation", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("WormwholesModel.FK_Users_Corporation", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_StaticCorporationsSystemsData_Corporation", "StaticCorporationsSystemsData")]
        public EntityCollection<StaticCorporationSystem> StaticCorporationsSystemsData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StaticCorporationSystem>("WormwholesModel.FK_StaticCorporationsSystemsData_Corporation", "StaticCorporationsSystemsData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StaticCorporationSystem>("WormwholesModel.FK_StaticCorporationsSystemsData_Corporation", "StaticCorporationsSystemsData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="FeedBack")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedBack : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedBack object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="dateAdded">Initial value of the dateAdded property.</param>
        /// <param name="lastModified">Initial value of the lastModified property.</param>
        public static FeedBack CreateFeedBack(global::System.Int64 id, global::System.Int64 user, global::System.String description, global::System.DateTime dateAdded, global::System.DateTime lastModified)
        {
            FeedBack feedBack = new FeedBack();
            feedBack.ID = id;
            feedBack.User = user;
            feedBack.description = description;
            feedBack.dateAdded = dateAdded;
            feedBack.lastModified = lastModified;
            return feedBack;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int64 _User;
        partial void OnUserChanging(global::System.Int64 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAdded
        {
            get
            {
                return _dateAdded;
            }
            set
            {
                OndateAddedChanging(value);
                ReportPropertyChanging("dateAdded");
                _dateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAdded");
                OndateAddedChanged();
            }
        }
        private global::System.DateTime _dateAdded;
        partial void OndateAddedChanging(global::System.DateTime value);
        partial void OndateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime lastModified
        {
            get
            {
                return _lastModified;
            }
            set
            {
                OnlastModifiedChanging(value);
                ReportPropertyChanging("lastModified");
                _lastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastModified");
                OnlastModifiedChanged();
            }
        }
        private global::System.DateTime _lastModified;
        partial void OnlastModifiedChanging(global::System.DateTime value);
        partial void OnlastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_FeedBack_User", "User")]
        public User RUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_FeedBack_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_FeedBack_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> RUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_FeedBack_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_FeedBack_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="dateAdded">Initial value of the dateAdded property.</param>
        /// <param name="corporation">Initial value of the Corporation property.</param>
        public static Log CreateLog(global::System.Int64 id, global::System.Int64 user, global::System.String description, global::System.DateTime dateAdded, global::System.Int64 corporation)
        {
            Log log = new Log();
            log.ID = id;
            log.User = user;
            log.description = description;
            log.dateAdded = dateAdded;
            log.Corporation = corporation;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int64 _User;
        partial void OnUserChanging(global::System.Int64 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAdded
        {
            get
            {
                return _dateAdded;
            }
            set
            {
                OndateAddedChanging(value);
                ReportPropertyChanging("dateAdded");
                _dateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAdded");
                OndateAddedChanged();
            }
        }
        private global::System.DateTime _dateAdded;
        partial void OndateAddedChanging(global::System.DateTime value);
        partial void OndateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Corporation
        {
            get
            {
                return _Corporation;
            }
            set
            {
                OnCorporationChanging(value);
                ReportPropertyChanging("Corporation");
                _Corporation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Corporation");
                OnCorporationChanged();
            }
        }
        private global::System.Int64 _Corporation;
        partial void OnCorporationChanging(global::System.Int64 value);
        partial void OnCorporationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Logs_User", "Users")]
        public User Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Logs_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Logs_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Logs_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_Logs_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Logs_Corporation", "Corporations")]
        public Corporation RCorporation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Logs_Corporation", "Corporations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Logs_Corporation", "Corporations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corporation> RCorporationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Logs_Corporation", "Corporations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corporation>("WormwholesModel.FK_Logs_Corporation", "Corporations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Loot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Loot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Loot object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Loot CreateLoot(global::System.Int64 id, global::System.Int32 type, global::System.String name)
        {
            Loot loot = new Loot();
            loot.ID = id;
            loot.type = type;
            loot.name = name;
            return loot;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.Int32 _type;
        partial void OntypeChanging(global::System.Int32 value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_OperationLoot_Loot", "Operation_Loot")]
        public EntityCollection<OperationLoot> Operation_Loot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OperationLoot>("WormwholesModel.FK_OperationLoot_Loot", "Operation_Loot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OperationLoot>("WormwholesModel.FK_OperationLoot_Loot", "Operation_Loot", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Operation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Operation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Operation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="systemName">Initial value of the systemName property.</param>
        /// <param name="opType">Initial value of the opType property.</param>
        /// <param name="opBasedOnType">Initial value of the opBasedOnType property.</param>
        /// <param name="opLength">Initial value of the opLength property.</param>
        /// <param name="iskMade">Initial value of the iskMade property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        /// <param name="dateAdded">Initial value of the dateAdded property.</param>
        /// <param name="iskMadeWithCut">Initial value of the iskMadeWithCut property.</param>
        /// <param name="corporation">Initial value of the Corporation property.</param>
        public static Operation CreateOperation(global::System.Int64 id, global::System.String systemName, global::System.Int32 opType, global::System.Int32 opBasedOnType, global::System.Int32 opLength, global::System.Double iskMade, global::System.Int64 addedBy, global::System.DateTime dateAdded, global::System.Double iskMadeWithCut, global::System.Int64 corporation)
        {
            Operation operation = new Operation();
            operation.ID = id;
            operation.systemName = systemName;
            operation.opType = opType;
            operation.opBasedOnType = opBasedOnType;
            operation.opLength = opLength;
            operation.iskMade = iskMade;
            operation.AddedBy = addedBy;
            operation.dateAdded = dateAdded;
            operation.iskMadeWithCut = iskMadeWithCut;
            operation.Corporation = corporation;
            return operation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String systemName
        {
            get
            {
                return _systemName;
            }
            set
            {
                OnsystemNameChanging(value);
                ReportPropertyChanging("systemName");
                _systemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("systemName");
                OnsystemNameChanged();
            }
        }
        private global::System.String _systemName;
        partial void OnsystemNameChanging(global::System.String value);
        partial void OnsystemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 opType
        {
            get
            {
                return _opType;
            }
            set
            {
                OnopTypeChanging(value);
                ReportPropertyChanging("opType");
                _opType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("opType");
                OnopTypeChanged();
            }
        }
        private global::System.Int32 _opType;
        partial void OnopTypeChanging(global::System.Int32 value);
        partial void OnopTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 opBasedOnType
        {
            get
            {
                return _opBasedOnType;
            }
            set
            {
                OnopBasedOnTypeChanging(value);
                ReportPropertyChanging("opBasedOnType");
                _opBasedOnType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("opBasedOnType");
                OnopBasedOnTypeChanged();
            }
        }
        private global::System.Int32 _opBasedOnType;
        partial void OnopBasedOnTypeChanging(global::System.Int32 value);
        partial void OnopBasedOnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 opLength
        {
            get
            {
                return _opLength;
            }
            set
            {
                OnopLengthChanging(value);
                ReportPropertyChanging("opLength");
                _opLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("opLength");
                OnopLengthChanged();
            }
        }
        private global::System.Int32 _opLength;
        partial void OnopLengthChanging(global::System.Int32 value);
        partial void OnopLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> iskCut
        {
            get
            {
                return _iskCut;
            }
            set
            {
                OniskCutChanging(value);
                ReportPropertyChanging("iskCut");
                _iskCut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iskCut");
                OniskCutChanged();
            }
        }
        private Nullable<global::System.Int32> _iskCut;
        partial void OniskCutChanging(Nullable<global::System.Int32> value);
        partial void OniskCutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iskCutInfo
        {
            get
            {
                return _iskCutInfo;
            }
            set
            {
                OniskCutInfoChanging(value);
                ReportPropertyChanging("iskCutInfo");
                _iskCutInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("iskCutInfo");
                OniskCutInfoChanged();
            }
        }
        private global::System.String _iskCutInfo;
        partial void OniskCutInfoChanging(global::System.String value);
        partial void OniskCutInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String opInfo
        {
            get
            {
                return _opInfo;
            }
            set
            {
                OnopInfoChanging(value);
                ReportPropertyChanging("opInfo");
                _opInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("opInfo");
                OnopInfoChanged();
            }
        }
        private global::System.String _opInfo;
        partial void OnopInfoChanging(global::System.String value);
        partial void OnopInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double iskMade
        {
            get
            {
                return _iskMade;
            }
            set
            {
                OniskMadeChanging(value);
                ReportPropertyChanging("iskMade");
                _iskMade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iskMade");
                OniskMadeChanged();
            }
        }
        private global::System.Double _iskMade;
        partial void OniskMadeChanging(global::System.Double value);
        partial void OniskMadeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.Int64 _AddedBy;
        partial void OnAddedByChanging(global::System.Int64 value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAdded
        {
            get
            {
                return _dateAdded;
            }
            set
            {
                OndateAddedChanging(value);
                ReportPropertyChanging("dateAdded");
                _dateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAdded");
                OndateAddedChanged();
            }
        }
        private global::System.DateTime _dateAdded;
        partial void OndateAddedChanging(global::System.DateTime value);
        partial void OndateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LastModifiedBy
        {
            get
            {
                return _LastModifiedBy;
            }
            set
            {
                OnLastModifiedByChanging(value);
                ReportPropertyChanging("LastModifiedBy");
                _LastModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedBy");
                OnLastModifiedByChanged();
            }
        }
        private Nullable<global::System.Int64> _LastModifiedBy;
        partial void OnLastModifiedByChanging(Nullable<global::System.Int64> value);
        partial void OnLastModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dateLastModified
        {
            get
            {
                return _dateLastModified;
            }
            set
            {
                OndateLastModifiedChanging(value);
                ReportPropertyChanging("dateLastModified");
                _dateLastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateLastModified");
                OndateLastModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateLastModified;
        partial void OndateLastModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OndateLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> iskCutType
        {
            get
            {
                return _iskCutType;
            }
            set
            {
                OniskCutTypeChanging(value);
                ReportPropertyChanging("iskCutType");
                _iskCutType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iskCutType");
                OniskCutTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _iskCutType;
        partial void OniskCutTypeChanging(Nullable<global::System.Int32> value);
        partial void OniskCutTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double iskMadeWithCut
        {
            get
            {
                return _iskMadeWithCut;
            }
            set
            {
                OniskMadeWithCutChanging(value);
                ReportPropertyChanging("iskMadeWithCut");
                _iskMadeWithCut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iskMadeWithCut");
                OniskMadeWithCutChanged();
            }
        }
        private global::System.Double _iskMadeWithCut;
        partial void OniskMadeWithCutChanging(global::System.Double value);
        partial void OniskMadeWithCutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Corporation
        {
            get
            {
                return _Corporation;
            }
            set
            {
                OnCorporationChanging(value);
                ReportPropertyChanging("Corporation");
                _Corporation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Corporation");
                OnCorporationChanged();
            }
        }
        private global::System.Int64 _Corporation;
        partial void OnCorporationChanging(global::System.Int64 value);
        partial void OnCorporationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_OperationLoot_Operation", "Operation_Loot")]
        public EntityCollection<OperationLoot> Operation_Loot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OperationLoot>("WormwholesModel.FK_OperationLoot_Operation", "Operation_Loot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OperationLoot>("WormwholesModel.FK_OperationLoot_Operation", "Operation_Loot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_OperationUser_Operation", "Operation_User")]
        public EntityCollection<OperationUser> Operation_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OperationUser>("WormwholesModel.FK_OperationUser_Operation", "Operation_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OperationUser>("WormwholesModel.FK_OperationUser_Operation", "Operation_User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Operation_AddedBy", "User")]
        public User RAddedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Operation_AddedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Operation_AddedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> RAddedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Operation_AddedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_Operation_AddedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Operation_LastModifiedBy", "User")]
        public User RLastModifiedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Operation_LastModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Operation_LastModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> RLastModifiedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Operation_LastModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_Operation_LastModifiedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Operation_Corporation", "Corporations")]
        public Corporation RCorporation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Operation_Corporation", "Corporations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Operation_Corporation", "Corporations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corporation> RCorporationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Operation_Corporation", "Corporations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corporation>("WormwholesModel.FK_Operation_Corporation", "Corporations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="OperationLoot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OperationLoot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OperationLoot object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="loot">Initial value of the Loot property.</param>
        /// <param name="quantity">Initial value of the quantity property.</param>
        /// <param name="pricePerOne">Initial value of the pricePerOne property.</param>
        public static OperationLoot CreateOperationLoot(global::System.Int64 id, global::System.Int64 operation, global::System.Int64 loot, global::System.Int32 quantity, global::System.Double pricePerOne)
        {
            OperationLoot operationLoot = new OperationLoot();
            operationLoot.ID = id;
            operationLoot.Operation = operation;
            operationLoot.Loot = loot;
            operationLoot.quantity = quantity;
            operationLoot.pricePerOne = pricePerOne;
            return operationLoot;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.Int64 _Operation;
        partial void OnOperationChanging(global::System.Int64 value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Loot
        {
            get
            {
                return _Loot;
            }
            set
            {
                OnLootChanging(value);
                ReportPropertyChanging("Loot");
                _Loot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Loot");
                OnLootChanged();
            }
        }
        private global::System.Int64 _Loot;
        partial void OnLootChanging(global::System.Int64 value);
        partial void OnLootChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private global::System.Int32 _quantity;
        partial void OnquantityChanging(global::System.Int32 value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double pricePerOne
        {
            get
            {
                return _pricePerOne;
            }
            set
            {
                OnpricePerOneChanging(value);
                ReportPropertyChanging("pricePerOne");
                _pricePerOne = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pricePerOne");
                OnpricePerOneChanged();
            }
        }
        private global::System.Double _pricePerOne;
        partial void OnpricePerOneChanging(global::System.Double value);
        partial void OnpricePerOneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_OperationLoot_Loot", "Loot")]
        public Loot Loot1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Loot>("WormwholesModel.FK_OperationLoot_Loot", "Loot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Loot>("WormwholesModel.FK_OperationLoot_Loot", "Loot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Loot> Loot1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Loot>("WormwholesModel.FK_OperationLoot_Loot", "Loot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Loot>("WormwholesModel.FK_OperationLoot_Loot", "Loot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_OperationLoot_Operation", "Operations")]
        public Operation Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("WormwholesModel.FK_OperationLoot_Operation", "Operations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("WormwholesModel.FK_OperationLoot_Operation", "Operations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operation> OperationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("WormwholesModel.FK_OperationLoot_Operation", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operation>("WormwholesModel.FK_OperationLoot_Operation", "Operations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="OperationUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OperationUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OperationUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="participatingLength">Initial value of the participatingLength property.</param>
        /// <param name="iskMade">Initial value of the iskMade property.</param>
        public static OperationUser CreateOperationUser(global::System.Int64 id, global::System.Int64 operation, global::System.Int64 user, global::System.Int32 participatingLength, global::System.Double iskMade)
        {
            OperationUser operationUser = new OperationUser();
            operationUser.ID = id;
            operationUser.Operation = operation;
            operationUser.User = user;
            operationUser.participatingLength = participatingLength;
            operationUser.iskMade = iskMade;
            return operationUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.Int64 _Operation;
        partial void OnOperationChanging(global::System.Int64 value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int64 _User;
        partial void OnUserChanging(global::System.Int64 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 participatingLength
        {
            get
            {
                return _participatingLength;
            }
            set
            {
                OnparticipatingLengthChanging(value);
                ReportPropertyChanging("participatingLength");
                _participatingLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("participatingLength");
                OnparticipatingLengthChanged();
            }
        }
        private global::System.Int32 _participatingLength;
        partial void OnparticipatingLengthChanging(global::System.Int32 value);
        partial void OnparticipatingLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double iskMade
        {
            get
            {
                return _iskMade;
            }
            set
            {
                OniskMadeChanging(value);
                ReportPropertyChanging("iskMade");
                _iskMade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iskMade");
                OniskMadeChanged();
            }
        }
        private global::System.Double _iskMade;
        partial void OniskMadeChanging(global::System.Double value);
        partial void OniskMadeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_OperationUser_Operation", "Operations")]
        public Operation Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("WormwholesModel.FK_OperationUser_Operation", "Operations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("WormwholesModel.FK_OperationUser_Operation", "Operations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operation> OperationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operation>("WormwholesModel.FK_OperationUser_Operation", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operation>("WormwholesModel.FK_OperationUser_Operation", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_OperationUser_User", "User")]
        public User Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_OperationUser_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_OperationUser_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_OperationUser_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_OperationUser_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="pConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class pConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new pConfiguration object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static pConfiguration CreatepConfiguration(global::System.Int64 id)
        {
            pConfiguration pConfiguration = new pConfiguration();
            pConfiguration.ID = id;
            return pConfiguration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateLastApiCall
        {
            get
            {
                return _DateLastApiCall;
            }
            set
            {
                OnDateLastApiCallChanging(value);
                ReportPropertyChanging("DateLastApiCall");
                _DateLastApiCall = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateLastApiCall");
                OnDateLastApiCallChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateLastApiCall;
        partial void OnDateLastApiCallChanging(Nullable<global::System.DateTime> value);
        partial void OnDateLastApiCallChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Signature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Signature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Signature object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="wormwhole">Initial value of the Wormwhole property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="dateAdded">Initial value of the dateAdded property.</param>
        public static Signature CreateSignature(global::System.Int64 id, global::System.Int64 user, global::System.Int64 wormwhole, global::System.String name, global::System.Int32 type, global::System.DateTime dateAdded)
        {
            Signature signature = new Signature();
            signature.ID = id;
            signature.User = user;
            signature.Wormwhole = wormwhole;
            signature.name = name;
            signature.type = type;
            signature.dateAdded = dateAdded;
            return signature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int64 _User;
        partial void OnUserChanging(global::System.Int64 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Wormwhole
        {
            get
            {
                return _Wormwhole;
            }
            set
            {
                OnWormwholeChanging(value);
                ReportPropertyChanging("Wormwhole");
                _Wormwhole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Wormwhole");
                OnWormwholeChanged();
            }
        }
        private global::System.Int64 _Wormwhole;
        partial void OnWormwholeChanging(global::System.Int64 value);
        partial void OnWormwholeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.Int32 _type;
        partial void OntypeChanging(global::System.Int32 value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAdded
        {
            get
            {
                return _dateAdded;
            }
            set
            {
                OndateAddedChanging(value);
                ReportPropertyChanging("dateAdded");
                _dateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAdded");
                OndateAddedChanged();
            }
        }
        private global::System.DateTime _dateAdded;
        partial void OndateAddedChanging(global::System.DateTime value);
        partial void OndateAddedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Signatures_User", "Users")]
        public User Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Signatures_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Signatures_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Signatures_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_Signatures_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Signatures_Wormwhole1", "Systems")]
        public Systems Systems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Signatures_Wormwhole1", "Systems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Signatures_Wormwhole1", "Systems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Systems> SystemsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Signatures_Wormwhole1", "Systems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Systems>("WormwholesModel.FK_Signatures_Wormwhole1", "Systems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="StaticCorporationSystem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StaticCorporationSystem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StaticCorporationSystem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="system">Initial value of the System property.</param>
        /// <param name="corporation">Initial value of the Corporation property.</param>
        /// <param name="dateFirstMet">Initial value of the dateFirstMet property.</param>
        /// <param name="datePreviousMet">Initial value of the datePreviousMet property.</param>
        /// <param name="dateCurrentMet">Initial value of the dateCurrentMet property.</param>
        public static StaticCorporationSystem CreateStaticCorporationSystem(global::System.Int64 id, global::System.Int64 system, global::System.Int64 corporation, global::System.DateTime dateFirstMet, global::System.DateTime datePreviousMet, global::System.DateTime dateCurrentMet)
        {
            StaticCorporationSystem staticCorporationSystem = new StaticCorporationSystem();
            staticCorporationSystem.ID = id;
            staticCorporationSystem.System = system;
            staticCorporationSystem.Corporation = corporation;
            staticCorporationSystem.dateFirstMet = dateFirstMet;
            staticCorporationSystem.datePreviousMet = datePreviousMet;
            staticCorporationSystem.dateCurrentMet = dateCurrentMet;
            return staticCorporationSystem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 System
        {
            get
            {
                return _System;
            }
            set
            {
                OnSystemChanging(value);
                ReportPropertyChanging("System");
                _System = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("System");
                OnSystemChanged();
            }
        }
        private global::System.Int64 _System;
        partial void OnSystemChanging(global::System.Int64 value);
        partial void OnSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Corporation
        {
            get
            {
                return _Corporation;
            }
            set
            {
                OnCorporationChanging(value);
                ReportPropertyChanging("Corporation");
                _Corporation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Corporation");
                OnCorporationChanged();
            }
        }
        private global::System.Int64 _Corporation;
        partial void OnCorporationChanging(global::System.Int64 value);
        partial void OnCorporationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateFirstMet
        {
            get
            {
                return _dateFirstMet;
            }
            set
            {
                OndateFirstMetChanging(value);
                ReportPropertyChanging("dateFirstMet");
                _dateFirstMet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateFirstMet");
                OndateFirstMetChanged();
            }
        }
        private global::System.DateTime _dateFirstMet;
        partial void OndateFirstMetChanging(global::System.DateTime value);
        partial void OndateFirstMetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime datePreviousMet
        {
            get
            {
                return _datePreviousMet;
            }
            set
            {
                OndatePreviousMetChanging(value);
                ReportPropertyChanging("datePreviousMet");
                _datePreviousMet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("datePreviousMet");
                OndatePreviousMetChanged();
            }
        }
        private global::System.DateTime _datePreviousMet;
        partial void OndatePreviousMetChanging(global::System.DateTime value);
        partial void OndatePreviousMetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateCurrentMet
        {
            get
            {
                return _dateCurrentMet;
            }
            set
            {
                OndateCurrentMetChanging(value);
                ReportPropertyChanging("dateCurrentMet");
                _dateCurrentMet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateCurrentMet");
                OndateCurrentMetChanged();
            }
        }
        private global::System.DateTime _dateCurrentMet;
        partial void OndateCurrentMetChanging(global::System.DateTime value);
        partial void OndateCurrentMetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String occupation
        {
            get
            {
                return _occupation;
            }
            set
            {
                OnoccupationChanging(value);
                ReportPropertyChanging("occupation");
                _occupation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("occupation");
                OnoccupationChanged();
            }
        }
        private global::System.String _occupation;
        partial void OnoccupationChanging(global::System.String value);
        partial void OnoccupationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_StaticCorporationsSystemsData_Corporation", "Corporation")]
        public Corporation RCorporation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_StaticCorporationsSystemsData_Corporation", "Corporation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_StaticCorporationsSystemsData_Corporation", "Corporation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corporation> RCorporationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_StaticCorporationsSystemsData_Corporation", "Corporation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corporation>("WormwholesModel.FK_StaticCorporationsSystemsData_Corporation", "Corporation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_StaticCorporationsSystemsData_System", "StaticSystemData")]
        public StaticSystemData RStaticSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StaticSystemData>("WormwholesModel.FK_StaticCorporationsSystemsData_System", "StaticSystemData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StaticSystemData>("WormwholesModel.FK_StaticCorporationsSystemsData_System", "StaticSystemData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StaticSystemData> RStaticSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StaticSystemData>("WormwholesModel.FK_StaticCorporationsSystemsData_System", "StaticSystemData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StaticSystemData>("WormwholesModel.FK_StaticCorporationsSystemsData_System", "StaticSystemData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="StaticSystemData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StaticSystemData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StaticSystemData object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="system">Initial value of the System property.</param>
        /// <param name="podKills">Initial value of the podKills property.</param>
        /// <param name="shipKills">Initial value of the shipKills property.</param>
        /// <param name="npcKills">Initial value of the npcKills property.</param>
        /// <param name="jumps">Initial value of the jumps property.</param>
        public static StaticSystemData CreateStaticSystemData(global::System.Int64 id, global::System.String system, global::System.Int64 podKills, global::System.Int64 shipKills, global::System.Int64 npcKills, global::System.Int64 jumps)
        {
            StaticSystemData staticSystemData = new StaticSystemData();
            staticSystemData.ID = id;
            staticSystemData.System = system;
            staticSystemData.podKills = podKills;
            staticSystemData.shipKills = shipKills;
            staticSystemData.npcKills = npcKills;
            staticSystemData.jumps = jumps;
            return staticSystemData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String System
        {
            get
            {
                return _System;
            }
            set
            {
                OnSystemChanging(value);
                ReportPropertyChanging("System");
                _System = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("System");
                OnSystemChanged();
            }
        }
        private global::System.String _System;
        partial void OnSystemChanging(global::System.String value);
        partial void OnSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 podKills
        {
            get
            {
                return _podKills;
            }
            set
            {
                OnpodKillsChanging(value);
                ReportPropertyChanging("podKills");
                _podKills = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("podKills");
                OnpodKillsChanged();
            }
        }
        private global::System.Int64 _podKills;
        partial void OnpodKillsChanging(global::System.Int64 value);
        partial void OnpodKillsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 shipKills
        {
            get
            {
                return _shipKills;
            }
            set
            {
                OnshipKillsChanging(value);
                ReportPropertyChanging("shipKills");
                _shipKills = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("shipKills");
                OnshipKillsChanged();
            }
        }
        private global::System.Int64 _shipKills;
        partial void OnshipKillsChanging(global::System.Int64 value);
        partial void OnshipKillsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 npcKills
        {
            get
            {
                return _npcKills;
            }
            set
            {
                OnnpcKillsChanging(value);
                ReportPropertyChanging("npcKills");
                _npcKills = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("npcKills");
                OnnpcKillsChanged();
            }
        }
        private global::System.Int64 _npcKills;
        partial void OnnpcKillsChanging(global::System.Int64 value);
        partial void OnnpcKillsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 jumps
        {
            get
            {
                return _jumps;
            }
            set
            {
                OnjumpsChanging(value);
                ReportPropertyChanging("jumps");
                _jumps = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("jumps");
                OnjumpsChanged();
            }
        }
        private global::System.Int64 _jumps;
        partial void OnjumpsChanging(global::System.Int64 value);
        partial void OnjumpsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_StaticCorporationsSystemsData_System", "StaticCorporationsSystemsData")]
        public EntityCollection<StaticCorporationSystem> StaticCorporationsSystemsData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StaticCorporationSystem>("WormwholesModel.FK_StaticCorporationsSystemsData_System", "StaticCorporationsSystemsData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StaticCorporationSystem>("WormwholesModel.FK_StaticCorporationsSystemsData_System", "StaticCorporationsSystemsData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Statistic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statistic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Statistic object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="forDate">Initial value of the forDate property.</param>
        /// <param name="visits">Initial value of the visits property.</param>
        /// <param name="registeredUsers">Initial value of the registeredUsers property.</param>
        /// <param name="usersDeleted">Initial value of the usersDeleted property.</param>
        /// <param name="registeredCorporations">Initial value of the registeredCorporations property.</param>
        /// <param name="systemsAdded">Initial value of the systemsAdded property.</param>
        /// <param name="systemsDeleted">Initial value of the systemsDeleted property.</param>
        /// <param name="signaturesAdded">Initial value of the signaturesAdded property.</param>
        /// <param name="signaturesDeleted">Initial value of the signaturesDeleted property.</param>
        /// <param name="operationsAdded">Initial value of the operationsAdded property.</param>
        /// <param name="operationsDeleted">Initial value of the operationsDeleted property.</param>
        public static Statistic CreateStatistic(global::System.Int64 id, global::System.DateTime forDate, global::System.Int64 visits, global::System.Int64 registeredUsers, global::System.Int64 usersDeleted, global::System.Int64 registeredCorporations, global::System.Int64 systemsAdded, global::System.Int64 systemsDeleted, global::System.Int64 signaturesAdded, global::System.Int64 signaturesDeleted, global::System.Int64 operationsAdded, global::System.Int64 operationsDeleted)
        {
            Statistic statistic = new Statistic();
            statistic.ID = id;
            statistic.forDate = forDate;
            statistic.visits = visits;
            statistic.registeredUsers = registeredUsers;
            statistic.usersDeleted = usersDeleted;
            statistic.registeredCorporations = registeredCorporations;
            statistic.systemsAdded = systemsAdded;
            statistic.systemsDeleted = systemsDeleted;
            statistic.signaturesAdded = signaturesAdded;
            statistic.signaturesDeleted = signaturesDeleted;
            statistic.operationsAdded = operationsAdded;
            statistic.operationsDeleted = operationsDeleted;
            return statistic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime forDate
        {
            get
            {
                return _forDate;
            }
            set
            {
                OnforDateChanging(value);
                ReportPropertyChanging("forDate");
                _forDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("forDate");
                OnforDateChanged();
            }
        }
        private global::System.DateTime _forDate;
        partial void OnforDateChanging(global::System.DateTime value);
        partial void OnforDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 visits
        {
            get
            {
                return _visits;
            }
            set
            {
                OnvisitsChanging(value);
                ReportPropertyChanging("visits");
                _visits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("visits");
                OnvisitsChanged();
            }
        }
        private global::System.Int64 _visits;
        partial void OnvisitsChanging(global::System.Int64 value);
        partial void OnvisitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 registeredUsers
        {
            get
            {
                return _registeredUsers;
            }
            set
            {
                OnregisteredUsersChanging(value);
                ReportPropertyChanging("registeredUsers");
                _registeredUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("registeredUsers");
                OnregisteredUsersChanged();
            }
        }
        private global::System.Int64 _registeredUsers;
        partial void OnregisteredUsersChanging(global::System.Int64 value);
        partial void OnregisteredUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 usersDeleted
        {
            get
            {
                return _usersDeleted;
            }
            set
            {
                OnusersDeletedChanging(value);
                ReportPropertyChanging("usersDeleted");
                _usersDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usersDeleted");
                OnusersDeletedChanged();
            }
        }
        private global::System.Int64 _usersDeleted;
        partial void OnusersDeletedChanging(global::System.Int64 value);
        partial void OnusersDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 registeredCorporations
        {
            get
            {
                return _registeredCorporations;
            }
            set
            {
                OnregisteredCorporationsChanging(value);
                ReportPropertyChanging("registeredCorporations");
                _registeredCorporations = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("registeredCorporations");
                OnregisteredCorporationsChanged();
            }
        }
        private global::System.Int64 _registeredCorporations;
        partial void OnregisteredCorporationsChanging(global::System.Int64 value);
        partial void OnregisteredCorporationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 systemsAdded
        {
            get
            {
                return _systemsAdded;
            }
            set
            {
                OnsystemsAddedChanging(value);
                ReportPropertyChanging("systemsAdded");
                _systemsAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("systemsAdded");
                OnsystemsAddedChanged();
            }
        }
        private global::System.Int64 _systemsAdded;
        partial void OnsystemsAddedChanging(global::System.Int64 value);
        partial void OnsystemsAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 systemsDeleted
        {
            get
            {
                return _systemsDeleted;
            }
            set
            {
                OnsystemsDeletedChanging(value);
                ReportPropertyChanging("systemsDeleted");
                _systemsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("systemsDeleted");
                OnsystemsDeletedChanged();
            }
        }
        private global::System.Int64 _systemsDeleted;
        partial void OnsystemsDeletedChanging(global::System.Int64 value);
        partial void OnsystemsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 signaturesAdded
        {
            get
            {
                return _signaturesAdded;
            }
            set
            {
                OnsignaturesAddedChanging(value);
                ReportPropertyChanging("signaturesAdded");
                _signaturesAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("signaturesAdded");
                OnsignaturesAddedChanged();
            }
        }
        private global::System.Int64 _signaturesAdded;
        partial void OnsignaturesAddedChanging(global::System.Int64 value);
        partial void OnsignaturesAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 signaturesDeleted
        {
            get
            {
                return _signaturesDeleted;
            }
            set
            {
                OnsignaturesDeletedChanging(value);
                ReportPropertyChanging("signaturesDeleted");
                _signaturesDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("signaturesDeleted");
                OnsignaturesDeletedChanged();
            }
        }
        private global::System.Int64 _signaturesDeleted;
        partial void OnsignaturesDeletedChanging(global::System.Int64 value);
        partial void OnsignaturesDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 operationsAdded
        {
            get
            {
                return _operationsAdded;
            }
            set
            {
                OnoperationsAddedChanging(value);
                ReportPropertyChanging("operationsAdded");
                _operationsAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("operationsAdded");
                OnoperationsAddedChanged();
            }
        }
        private global::System.Int64 _operationsAdded;
        partial void OnoperationsAddedChanging(global::System.Int64 value);
        partial void OnoperationsAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 operationsDeleted
        {
            get
            {
                return _operationsDeleted;
            }
            set
            {
                OnoperationsDeletedChanging(value);
                ReportPropertyChanging("operationsDeleted");
                _operationsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("operationsDeleted");
                OnoperationsDeletedChanged();
            }
        }
        private global::System.Int64 _operationsDeleted;
        partial void OnoperationsDeletedChanging(global::System.Int64 value);
        partial void OnoperationsDeletedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Systems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Systems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Systems object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="root">Initial value of the root property.</param>
        /// <param name="dateAdded">Initial value of the dateAdded property.</param>
        /// <param name="corporation">Initial value of the Corporation property.</param>
        public static Systems CreateSystems(global::System.Int64 id, global::System.Int64 user, global::System.String name, global::System.Boolean root, global::System.DateTime dateAdded, global::System.Int64 corporation)
        {
            Systems systems = new Systems();
            systems.ID = id;
            systems.User = user;
            systems.name = name;
            systems.root = root;
            systems.dateAdded = dateAdded;
            systems.Corporation = corporation;
            return systems;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int64 _User;
        partial void OnUserChanging(global::System.Int64 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String whID
        {
            get
            {
                return _whID;
            }
            set
            {
                OnwhIDChanging(value);
                ReportPropertyChanging("whID");
                _whID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("whID");
                OnwhIDChanged();
            }
        }
        private global::System.String _whID;
        partial void OnwhIDChanging(global::System.String value);
        partial void OnwhIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean root
        {
            get
            {
                return _root;
            }
            set
            {
                OnrootChanging(value);
                ReportPropertyChanging("root");
                _root = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("root");
                OnrootChanged();
            }
        }
        private global::System.Boolean _root;
        partial void OnrootChanging(global::System.Boolean value);
        partial void OnrootChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAdded
        {
            get
            {
                return _dateAdded;
            }
            set
            {
                OndateAddedChanging(value);
                ReportPropertyChanging("dateAdded");
                _dateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAdded");
                OndateAddedChanged();
            }
        }
        private global::System.DateTime _dateAdded;
        partial void OndateAddedChanging(global::System.DateTime value);
        partial void OndateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String occupied
        {
            get
            {
                return _occupied;
            }
            set
            {
                OnoccupiedChanging(value);
                ReportPropertyChanging("occupied");
                _occupied = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("occupied");
                OnoccupiedChanged();
            }
        }
        private global::System.String _occupied;
        partial void OnoccupiedChanging(global::System.String value);
        partial void OnoccupiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sysClass
        {
            get
            {
                return _sysClass;
            }
            set
            {
                OnsysClassChanging(value);
                ReportPropertyChanging("sysClass");
                _sysClass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sysClass");
                OnsysClassChanged();
            }
        }
        private Nullable<global::System.Int32> _sysClass;
        partial void OnsysClassChanging(Nullable<global::System.Int32> value);
        partial void OnsysClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sysEffect
        {
            get
            {
                return _sysEffect;
            }
            set
            {
                OnsysEffectChanging(value);
                ReportPropertyChanging("sysEffect");
                _sysEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sysEffect");
                OnsysEffectChanged();
            }
        }
        private Nullable<global::System.Int32> _sysEffect;
        partial void OnsysEffectChanging(Nullable<global::System.Int32> value);
        partial void OnsysEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Corporation
        {
            get
            {
                return _Corporation;
            }
            set
            {
                OnCorporationChanging(value);
                ReportPropertyChanging("Corporation");
                _Corporation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Corporation");
                OnCorporationChanged();
            }
        }
        private global::System.Int64 _Corporation;
        partial void OnCorporationChanging(global::System.Int64 value);
        partial void OnCorporationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Signatures_Wormwhole1", "Signature")]
        public EntityCollection<Signature> Signatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Signature>("WormwholesModel.FK_Signatures_Wormwhole1", "Signature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Signature>("WormwholesModel.FK_Signatures_Wormwhole1", "Signature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Wormwhole_FromSystem", "Wormwhole1")]
        public EntityCollection<Wormwhole> WhFromSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wormwhole>("WormwholesModel.FK_Wormwhole_FromSystem", "Wormwhole1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wormwhole>("WormwholesModel.FK_Wormwhole_FromSystem", "Wormwhole1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Wormwhole_ToSystem", "Wormwhole1")]
        public EntityCollection<Wormwhole> WhToSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wormwhole>("WormwholesModel.FK_Wormwhole_ToSystem", "Wormwhole1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wormwhole>("WormwholesModel.FK_Wormwhole_ToSystem", "Wormwhole1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Wormwholes_User1", "User")]
        public User Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Wormwholes_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Wormwholes_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Wormwholes_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_Wormwholes_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_System_Corporation", "Corporations")]
        public Corporation RCorporation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_System_Corporation", "Corporations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_System_Corporation", "Corporations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corporation> RCorporationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_System_Corporation", "Corporations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corporation>("WormwholesModel.FK_System_Corporation", "Corporations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Text")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Text : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Text object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="callName">Initial value of the callName property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="description">Initial value of the description property.</param>
        public static Text CreateText(global::System.Int64 id, global::System.String callName, global::System.String name, global::System.String description)
        {
            Text text = new Text();
            text.ID = id;
            text.callName = callName;
            text.name = name;
            text.description = description;
            return text;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String callName
        {
            get
            {
                return _callName;
            }
            set
            {
                OncallNameChanging(value);
                ReportPropertyChanging("callName");
                _callName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("callName");
                OncallNameChanged();
            }
        }
        private global::System.String _callName;
        partial void OncallNameChanging(global::System.String value);
        partial void OncallNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastModified
        {
            get
            {
                return _lastModified;
            }
            set
            {
                OnlastModifiedChanging(value);
                ReportPropertyChanging("lastModified");
                _lastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastModified");
                OnlastModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastModified;
        partial void OnlastModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnlastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> lastModifiedBy
        {
            get
            {
                return _lastModifiedBy;
            }
            set
            {
                OnlastModifiedByChanging(value);
                ReportPropertyChanging("lastModifiedBy");
                _lastModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastModifiedBy");
                OnlastModifiedByChanged();
            }
        }
        private Nullable<global::System.Int64> _lastModifiedBy;
        partial void OnlastModifiedByChanging(Nullable<global::System.Int64> value);
        partial void OnlastModifiedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Texts_LastModifiedBy", "User")]
        public User RLastModifiedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Texts_LastModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Texts_LastModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> RLastModifiedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WormwholesModel.FK_Texts_LastModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WormwholesModel.FK_Texts_LastModifiedBy", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="visible">Initial value of the visible property.</param>
        /// <param name="admin">Initial value of the admin property.</param>
        /// <param name="canEdit">Initial value of the canEdit property.</param>
        /// <param name="globalAdmin">Initial value of the globalAdmin property.</param>
        public static User CreateUser(global::System.Int64 id, global::System.String name, global::System.String password, global::System.Boolean visible, global::System.Boolean admin, global::System.Boolean canEdit, global::System.Boolean globalAdmin)
        {
            User user = new User();
            user.ID = id;
            user.name = name;
            user.password = password;
            user.visible = visible;
            user.admin = admin;
            user.canEdit = canEdit;
            user.globalAdmin = globalAdmin;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean visible
        {
            get
            {
                return _visible;
            }
            set
            {
                OnvisibleChanging(value);
                ReportPropertyChanging("visible");
                _visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("visible");
                OnvisibleChanged();
            }
        }
        private global::System.Boolean _visible;
        partial void OnvisibleChanging(global::System.Boolean value);
        partial void OnvisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean admin
        {
            get
            {
                return _admin;
            }
            set
            {
                OnadminChanging(value);
                ReportPropertyChanging("admin");
                _admin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("admin");
                OnadminChanged();
            }
        }
        private global::System.Boolean _admin;
        partial void OnadminChanging(global::System.Boolean value);
        partial void OnadminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean canEdit
        {
            get
            {
                return _canEdit;
            }
            set
            {
                OncanEditChanging(value);
                ReportPropertyChanging("canEdit");
                _canEdit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("canEdit");
                OncanEditChanged();
            }
        }
        private global::System.Boolean _canEdit;
        partial void OncanEditChanging(global::System.Boolean value);
        partial void OncanEditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean globalAdmin
        {
            get
            {
                return _globalAdmin;
            }
            set
            {
                OnglobalAdminChanging(value);
                ReportPropertyChanging("globalAdmin");
                _globalAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("globalAdmin");
                OnglobalAdminChanged();
            }
        }
        private global::System.Boolean _globalAdmin;
        partial void OnglobalAdminChanging(global::System.Boolean value);
        partial void OnglobalAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Corporation
        {
            get
            {
                return _Corporation;
            }
            set
            {
                OnCorporationChanging(value);
                ReportPropertyChanging("Corporation");
                _Corporation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Corporation");
                OnCorporationChanged();
            }
        }
        private Nullable<global::System.Int64> _Corporation;
        partial void OnCorporationChanging(Nullable<global::System.Int64> value);
        partial void OnCorporationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String logInHash
        {
            get
            {
                return _logInHash;
            }
            set
            {
                OnlogInHashChanging(value);
                ReportPropertyChanging("logInHash");
                _logInHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("logInHash");
                OnlogInHashChanged();
            }
        }
        private global::System.String _logInHash;
        partial void OnlogInHashChanging(global::System.String value);
        partial void OnlogInHashChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Logs_User", "Logs")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("WormwholesModel.FK_Logs_User", "Logs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("WormwholesModel.FK_Logs_User", "Logs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Signatures_User", "Signatures")]
        public EntityCollection<Signature> Signatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Signature>("WormwholesModel.FK_Signatures_User", "Signatures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Signature>("WormwholesModel.FK_Signatures_User", "Signatures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Wormwholes_User1", "Systems")]
        public EntityCollection<Systems> Systems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Systems>("WormwholesModel.FK_Wormwholes_User1", "Systems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Systems>("WormwholesModel.FK_Wormwholes_User1", "Systems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_OperationUser_User", "Operation_User")]
        public EntityCollection<OperationUser> Operation_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OperationUser>("WormwholesModel.FK_OperationUser_User", "Operation_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OperationUser>("WormwholesModel.FK_OperationUser_User", "Operation_User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Operation_AddedBy", "Operations")]
        public EntityCollection<Operation> Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Operation>("WormwholesModel.FK_Operation_AddedBy", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Operation>("WormwholesModel.FK_Operation_AddedBy", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Operation_LastModifiedBy", "Operations")]
        public EntityCollection<Operation> Operations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Operation>("WormwholesModel.FK_Operation_LastModifiedBy", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Operation>("WormwholesModel.FK_Operation_LastModifiedBy", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Corporations_AddedBy", "Corporations")]
        public EntityCollection<Corporation> Corporations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Corporation>("WormwholesModel.FK_Corporations_AddedBy", "Corporations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Corporation>("WormwholesModel.FK_Corporations_AddedBy", "Corporations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Users_Corporation", "Corporations")]
        public Corporation RCorporation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Users_Corporation", "Corporations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Users_Corporation", "Corporations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corporation> RCorporationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporation>("WormwholesModel.FK_Users_Corporation", "Corporations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corporation>("WormwholesModel.FK_Users_Corporation", "Corporations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_FeedBack_User", "FeedBack")]
        public EntityCollection<FeedBack> FeedBack
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedBack>("WormwholesModel.FK_FeedBack_User", "FeedBack");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedBack>("WormwholesModel.FK_FeedBack_User", "FeedBack", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Texts_LastModifiedBy", "Texts")]
        public EntityCollection<Text> Texts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Text>("WormwholesModel.FK_Texts_LastModifiedBy", "Texts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Text>("WormwholesModel.FK_Texts_LastModifiedBy", "Texts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="Wormwhole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wormwhole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wormwhole object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fromSystem">Initial value of the FromSystem property.</param>
        /// <param name="fromSysWormwholeID">Initial value of the fromSysWormwholeID property.</param>
        /// <param name="toSystem">Initial value of the ToSystem property.</param>
        public static Wormwhole CreateWormwhole(global::System.Int64 id, global::System.Int64 fromSystem, global::System.String fromSysWormwholeID, global::System.Int64 toSystem)
        {
            Wormwhole wormwhole = new Wormwhole();
            wormwhole.ID = id;
            wormwhole.FromSystem = fromSystem;
            wormwhole.fromSysWormwholeID = fromSysWormwholeID;
            wormwhole.ToSystem = toSystem;
            return wormwhole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FromSystem
        {
            get
            {
                return _FromSystem;
            }
            set
            {
                OnFromSystemChanging(value);
                ReportPropertyChanging("FromSystem");
                _FromSystem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromSystem");
                OnFromSystemChanged();
            }
        }
        private global::System.Int64 _FromSystem;
        partial void OnFromSystemChanging(global::System.Int64 value);
        partial void OnFromSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fromSysWormwholeID
        {
            get
            {
                return _fromSysWormwholeID;
            }
            set
            {
                OnfromSysWormwholeIDChanging(value);
                ReportPropertyChanging("fromSysWormwholeID");
                _fromSysWormwholeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fromSysWormwholeID");
                OnfromSysWormwholeIDChanged();
            }
        }
        private global::System.String _fromSysWormwholeID;
        partial void OnfromSysWormwholeIDChanging(global::System.String value);
        partial void OnfromSysWormwholeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ToSystem
        {
            get
            {
                return _ToSystem;
            }
            set
            {
                OnToSystemChanging(value);
                ReportPropertyChanging("ToSystem");
                _ToSystem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToSystem");
                OnToSystemChanged();
            }
        }
        private global::System.Int64 _ToSystem;
        partial void OnToSystemChanging(global::System.Int64 value);
        partial void OnToSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String toSysWormwholeID
        {
            get
            {
                return _toSysWormwholeID;
            }
            set
            {
                OntoSysWormwholeIDChanging(value);
                ReportPropertyChanging("toSysWormwholeID");
                _toSysWormwholeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("toSysWormwholeID");
                OntoSysWormwholeIDChanged();
            }
        }
        private global::System.String _toSysWormwholeID;
        partial void OntoSysWormwholeIDChanging(global::System.String value);
        partial void OntoSysWormwholeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Wormwhole_FromSystem", "Systems")]
        public Systems FromSystems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Wormwhole_FromSystem", "Systems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Wormwhole_FromSystem", "Systems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Systems> FromSystemsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Wormwhole_FromSystem", "Systems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Systems>("WormwholesModel.FK_Wormwhole_FromSystem", "Systems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WormwholesModel", "FK_Wormwhole_ToSystem", "Systems")]
        public Systems ToSystems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Wormwhole_ToSystem", "Systems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Wormwhole_ToSystem", "Systems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Systems> ToSystemsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Systems>("WormwholesModel.FK_Wormwhole_ToSystem", "Systems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Systems>("WormwholesModel.FK_Wormwhole_ToSystem", "Systems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WormwholesModel", Name="WormwholeIdentification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WormwholeIdentification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WormwholeIdentification object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static WormwholeIdentification CreateWormwholeIdentification(global::System.String id)
        {
            WormwholeIdentification wormwholeIdentification = new WormwholeIdentification();
            wormwholeIdentification.ID = id;
            return wormwholeIdentification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String target
        {
            get
            {
                return _target;
            }
            set
            {
                OntargetChanging(value);
                ReportPropertyChanging("target");
                _target = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("target");
                OntargetChanged();
            }
        }
        private global::System.String _target;
        partial void OntargetChanging(global::System.String value);
        partial void OntargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> lifetime
        {
            get
            {
                return _lifetime;
            }
            set
            {
                OnlifetimeChanging(value);
                ReportPropertyChanging("lifetime");
                _lifetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lifetime");
                OnlifetimeChanged();
            }
        }
        private Nullable<global::System.Int32> _lifetime;
        partial void OnlifetimeChanging(Nullable<global::System.Int32> value);
        partial void OnlifetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> maxMass
        {
            get
            {
                return _maxMass;
            }
            set
            {
                OnmaxMassChanging(value);
                ReportPropertyChanging("maxMass");
                _maxMass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("maxMass");
                OnmaxMassChanged();
            }
        }
        private Nullable<global::System.Int64> _maxMass;
        partial void OnmaxMassChanging(Nullable<global::System.Int64> value);
        partial void OnmaxMassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> totalMass
        {
            get
            {
                return _totalMass;
            }
            set
            {
                OntotalMassChanging(value);
                ReportPropertyChanging("totalMass");
                _totalMass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("totalMass");
                OntotalMassChanged();
            }
        }
        private Nullable<global::System.Int64> _totalMass;
        partial void OntotalMassChanging(Nullable<global::System.Int64> value);
        partial void OntotalMassChanged();

        #endregion
    
    }

    #endregion
    
}
